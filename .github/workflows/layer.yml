name: Lambda Layer Build & Upload

on:
  workflow_dispatch:
    inputs:
      lambda_name:
        description: "Which Lambda folder to build layer for?"
        required: true
        type: choice
        options:
          - llm_lambda
          - llm_lambda_test

jobs:
  build-layer:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ap-south-1

      - name: Setup Python 3.11
        uses: actions/setup-python@v4
        with:
          python-version: 3.11

      - name: Install jq for JSON manipulation
        run: sudo apt-get update && sudo apt-get install -y jq

      - name: Build & Upload Selected Layer
        run: |
          if [ "${{ github.event.inputs.lambda_name }}" = "all" ]; then
            DIRS=Lambda/*/
          else
            DIRS=Lambda/${{ github.event.inputs.lambda_name }}/
          fi

          for dir in $DIRS; do
            FUNC_NAME=$(basename $dir)
            echo "ðŸ”¨ Processing $FUNC_NAME..."

            # Clean previous build
            rm -rf python layer.zip

            # Install dependencies for Python 3.11
            pip install --upgrade pip
            pip install -r $dir/requirements.txt -t python/

            # Generate hash of requirements.txt
            REQ_HASH=$(sha256sum $dir/requirements.txt | cut -c1-8)
            echo "ðŸ“¦ Requirements hash: $REQ_HASH"

            # Package the layer
            zip -r layer.zip python

            # Upload to S3
            TIMESTAMP=$(date +%s)
            S3_BUCKET=org-dev-chatbot-document-v2-s3-my-lambda-layers-bucket
            LAYER_KEY=Lambda-layers/$FUNC_NAME/layer-$TIMESTAMP-$REQ_HASH.zip
            aws s3 cp layer.zip s3://$S3_BUCKET/$LAYER_KEY

            # Publish Lambda layer version
            VERSION=$(aws lambda publish-layer-version \
              --layer-name ${FUNC_NAME}-layer \
              --content S3Bucket=$S3_BUCKET,S3Key=$LAYER_KEY \
              --compatible-runtimes python3.11 \
              --description "Requirements hash: $REQ_HASH" \
              --query Version \
              --output text)

            # Prepare JSON metadata
            LAYER_INFO=$(jq -n \
              --arg name "${FUNC_NAME}-layer" \
              --arg version "$VERSION" \
              --arg hash "$REQ_HASH" \
              --arg s3key "$LAYER_KEY" \
              '{layer_name: $name, layer_version: $version, requirements_hash: $hash, s3_key: $s3key}')

            # Save JSON for future actions
            echo "$LAYER_INFO" > $FUNC_NAME-layer-info.json

            # Echo to GitHub Actions log
            echo "âœ… Layer Published:"
            echo "$LAYER_INFO"

          done
